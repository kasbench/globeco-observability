apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: monitoring
spec:
  mode: deployment
  image: otel/opentelemetry-collector-contrib:latest
  serviceAccount: otel-collector
  
  # Ports configuration
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: prometheus
      port: 8889
      targetPort: 8889
      protocol: TCP
    - name: pprof
      port: 1777
      targetPort: 1777
      protocol: TCP
    - name: zpages
      port: 55679
      targetPort: 55679
      protocol: TCP
  
  # OpenTelemetry Collector configuration
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
    
    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
        send_batch_max_size: 2048
      
      memory_limiter:
        limit_mib: 512
        spike_limit_mib: 128
        check_interval: 5s
      
      # Enhanced resource processor to preserve original service.name and add pod info
      resource:
        attributes:
          # Only add collector info if service.name is not already present
          - key: collector.name
            value: otel-collector
            action: upsert
          - key: collector.version
            value: "1.0.0"
            action: upsert
          - key: k8s.pod.name
            from_attribute: k8s.pod.name
            action: upsert
          - key: k8s.pod.ip
            value: "${env:MY_POD_IP}"
            action: upsert
          - key: k8s.node.name
            value: "${env:MY_NODE_NAME}"
            action: upsert
          - key: k8s.namespace.name
            value: "${env:MY_NAMESPACE}"
            action: upsert
      
      # Add k8sattributes processor to get pod information
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: MY_NODE_NAME
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
          labels:
            - tag_name: k8s.pod.label.app
              key: app
              from: pod
            - tag_name: k8s.pod.label.version
              key: version
              from: pod
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection
    
    exporters:
      # Enhanced Prometheus exporter configuration
      prometheus:
        endpoint: "0.0.0.0:8889"
        # Remove the namespace prefix to avoid otel_ prefix
        namespace: ""
        const_labels:
          environment: "production"
          collector: "otel-collector"
        metric_expiration: 180m
        resource_to_telemetry_conversion:
          enabled: true
        # Enable target_info metric to preserve resource attributes
        enable_open_metrics: true
        # Add resource attributes as labels
        add_metric_suffixes: true
        
      # Optional: Logging exporter for debugging
      # logging:
        # loglevel: debug
        # sampling_initial: 2
        # sampling_thereafter: 500
      debug: {}
    
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      
      pprof:
        endpoint: 0.0.0.0:1777
      
      zpages:
        endpoint: 0.0.0.0:55679
    
    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [prometheus, debug]
        
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug]
        
        logs:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug]
  
  # Resource configuration
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Replica configuration
  replicas: 1
  
  # Pod template customization
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8889"
    prometheus.io/path: "/metrics"
  
  # Enhanced environment variables
  env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: MY_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: MY_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "services", "endpoints", "namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["replicasets", "deployments", "daemonsets", "statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets", "deployments", "daemonsets"]
    verbs: ["get", "list", "watch"]
  # Additional permissions for k8sattributes processor
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector
subjects:
  - kind: ServiceAccount
    name: otel-collector
    namespace: monitoring
